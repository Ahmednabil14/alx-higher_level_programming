>>> add_integer = __import__('0-add_integer').add_integer

>>> add_integer(0, 0)
0
>>> add_integer(0, 1)
1
>>> add_integer(1, 0)
1
>>> add_integer(1, 3)
4
>>> add_integer(1, -2)
-1
>>> add_integer(-1, 2)
1
>>> add_integer(100.3, -2)
98
>>> add_integer(0)
98
>>> add_integer("5", "3")
Traceback (most recent call last):
TypeError: a must be an integer
>>> add_integer("5")
Traceback (most recent call last):
TypeError: a must be an integer
>>> add_integer(5, "3")
Traceback (most recent call last):
TypeError: b must be an integer
>>> add_integer()
Traceback (most recent call last):
...
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer(int("ahmed"), int("3"))
Traceback (most recent call last):
...
ValueError: invalid literal for int() with base 10: 'ahmed'

>>> add_integer(float("nan"), 4)
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer

>>> add_integer(float("inf"), 4)
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer
